@using Shared.Application.Utility
@model Users1.Application.Contract.UserService.Command.EditUserByAdmin

@{
	ViewData["Title"]= "ویرایش کاربر";
	ViewData["Selected"] = "Users";
	
}

<div style="margin-right: 200px; margin-left: 200px; " >

	<br><br>
	<form class=" mt-3" method="post" href="/Admin/Users/EditUser" enctype="multipart/form-data">
	
		@Html.HiddenFor(x=> x.Id)
		@Html.HiddenFor(x=> x.AvatarName)
		@Html.EditorFor(x=> x.FullName)
		@Html.EditorFor(x=> x.Mobile)
		@Html.EditorFor(x=> x.Email)
		@Html.EditorFor(x=> x.UserGender)
		<br><br>
		<img id="img_preview" src="@Directories.GetUserAvatarFullPath(@Model?.AvatarName ?? null,100)" height="100" width="100" alt="user-avatar" />
		<br><br>
	
		@Html.EditorFor(x=> x.AvatarFile)
		@Html.EditorFor(x=> x.biography)
	
		@if (@Model.IsBanned)
		{
			<a class="btn btn-danger  mr-1" onclick="changeBan('/Admin/Users/ChangeUserBan/@Model.Id')">بــــن کردن</a>
		}
		else
		{
			<a class="btn btn-primary mr-1" onclick="changeBan('/Admin/Users/ChangeUserBan/@Model.Id')">از بن در آوردن</a>
		}
	
		@if (Model.IsActive)
		{
			<a class="btn btn-danger mr-1" onclick="changeActivation('/Admin/Users/ChangeUserActivation/@Model.Id')"> غیر فعال کردن</a>
		}
		else
		{
			<a class="btn btn-primary mr-1" onclick="changeActivation('/Admin/Users/ChangeUserActivation/@Model.Id')">  فعال کردن</a>
		}
		
		<hr>
		<button type="submit" onclick="sweetAlertConfirmSubmit(event)" class="btn btn-success mr-1 ">ثبت ویرایش</button>
		<a class="btn btn-danger m-3" href="./">انصراف</a>
	</form>
</div>


@section Scripts
{
	
	<script type="text/javascript">
		
		function changeActivation(url, errorTitle, errorText) {
			if (errorTitle == null || errorTitle == "undefined") {
				errorTitle = "عملیات ناموفق";
			}
			if (errorText == null || errorText == "undefined") {
				errorText = "";
			}
			Swal.fire({
				title: "هشدار !!",
				text: "آیا از انجام عملیات اطمینان دارید ؟",
				icon: "warning",
				confirmButtonText: "بله",
				showCancelButton: true,
				cancelButtonText: "خیر",
				preConfirm: () => {
					$.ajax({
						url: url,
						type: "get",
						beforeSend: function () {
							$(".loading").show();
						},
						complete: function () {
							$(".loading").hide();
						},
						error: function (data) {
							ErrorAlert("مشکلی در اعملیات رخ داده", "لطفا در زمان دیگری امتحان کنید");
						}
					}).done(function (result) {
						{
							if (result.success) {
								Success(result.title, result.message);
							} else {
								ErrorAlert(result.title, result.message);
							}

							setTimeout(function (parameters) {
									location.reload();
								},
								2000);
						}
					});


				}
			});
		}
	
		function changeBan(url, errorTitle, errorText) {
			if (errorTitle == null || errorTitle == "undefined") {
				errorTitle = "عملیات ناموفق";
			}
			if (errorText == null || errorText == "undefined") {
				errorText = "";
			}
			Swal.fire({
				title: "هشدار !!",
				text: "آیا از انجام عملیات اطمینان دارید ؟",
				icon: "warning",
				confirmButtonText: "بله",
				showCancelButton: true,
				cancelButtonText: "خیر",
				preConfirm: () => {
					$.ajax({
						url: url,
						type: "get",
						beforeSend: function () {
							$(".loading").show();
						},
						complete: function () {
							$(".loading").hide();
						},
						error: function (data) {
							ErrorAlert("مشکلی در اعملیات رخ داده", "لطفا در زمان دیگری امتحان کنید");
						}
					}).done(function (result) {
						{
							if (result.success) {
								Success(result.title, result.message);
							} else {
								ErrorAlert(result.title, result.message);
							}

							setTimeout(function (parameters) {
									location.reload();
								},
								2000);
						}
					});


				}
			});
		}
	  
		//event listener for input type file for preventing choosing any file except image file before user submit the form
		document.getElementById('file_input').addEventListener('change', function(event) {
			const file = event.target.files[0];
			if (validateImageFile(file)) {
				if (file && file.type.startsWith('image/')) {
					const reader = new FileReader();
					reader.onload = function(e) {
						const img = document.getElementById('img_preview');
						img.src = e.target.result;
						img.style.display = 'block';
					};
					reader.readAsDataURL(file);
				}
			}
			
		});

		function validateImageFile(file) {
			const allowedImageTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/bmp', 'image/webp'];
			if (file && allowedImageTypes.includes(file.type)) {
				return true;
			} else {
				ErrorAlert('تصویر نامعتبر!','لطفا تصویر معتبر که پسوند های jpeg,png,bmp,webp داشته باشد انتخاب کنید');
				$("#file_input").val('');
				return false;
			}
		}
	</script>
}
