@using Shared.Application.Utility
@model Users1.Application.Contract.UserService.Command.EditUserByAdmin

@{
	ViewData["Title"]= "ویرایش کاربر";
	ViewData["Selected"] = "Users";
	
}



<div class="row">
	<div class="col-xs-12">
		<div class="box box-success">
			<form method="post" role="form" enctype="multipart/form-data" onsubmit="sweetAlertConfirmSubmit(event)">
				<div class="box-body">
					<div class="col-12">
						@Html.HiddenFor(x => x.Id)
						@Html.HiddenFor(x=> x.IsActive)
						@Html.HiddenFor(x=> x.IsBanned)
						@Html.HiddenFor(x => x.AvatarName)
						@Html.EditorFor(x => x.FullName)
						@Html.EditorFor(x => x.Mobile)
						@Html.EditorFor(x => x.Email)
						@Html.EditorFor(x => x.UserGender)
						<br><br>
						<img id="img_preview" src="@Directories.GetUserAvatarFullPath(@Model?.AvatarName ?? null,100)" height="100" width="100" alt="user-avatar" />
						<br><br>

						@Html.EditorFor(x => x.AvatarFile)
						@Html.EditorFor(x => x.biography)

						@{

							string title = Model.IsBanned ? "از بن در آوردن" : "بن کردن";
							string text = Model.IsBanned ? "با این کار حساب کاربری این کاربر به حالت عادی خود بر میگردد" : "با این کار حساب کاربری این کاربر بسته میشود.";
							string confirmText = Model.IsBanned ? "از بن دربیاید" : "بن شود";
							string cancelText = Model.IsBanned ? "در حالت بن بماند" : "در حالت عادی بماند";

						}

						@if (@Model.IsBanned)
						{

							<a class="btn btn-info  mr-1" onclick="ajaxSweetAlertRefresh('@title','@text','@confirmText','@cancelText','/Admin/Users/ChangeBan/@Model.Id')">ازبن در آوردن</a>
						}
						else
						{
							<a class="btn btn-danger mr-1" onclick="ajaxSweetAlertRefresh('@title','@text','@confirmText','@cancelText','/Admin/Users/ChangeBan/@Model.Id')">بن کردن</a>
						}

						@{

							title = Model.IsActive ? "غیر فعال کردن حساب" : "فعال کردن حساب";
							text = Model.IsActive ? "با این کار این حساب کاربری غیر فعال مشود و کاربر نمیتواند لاگین کند" : "با این کار حساب کاربری فعال شده و کاربر دوباره میتواند به سایت وارد شود";
							confirmText = Model.IsActive ? " غیر فعال شود" : "فعال شود";
							cancelText = Model.IsActive ? "فعال بماند" : "غیر فعال بماند";

						}
						@if (Model.IsActive)
						{
							<a class="btn btn-danger mr-1" onclick="ajaxSweetAlertRefresh('@title','@text','@confirmText','@cancelText','/Admin/Users/ChangeActivation/@Model.Id')"> غیر فعال کردن</a>
						}
						else
						{
							<a class="btn btn-info mr-1" onclick="ajaxSweetAlertRefresh('@title','@text','@confirmText','@cancelText','/Admin/Users/ChangeActivation/@Model.Id')">  فعال کردن</a>
						}

						<hr>
						<button type="submit" class="btn btn-success mr-1 ">ثبت ویرایش</button>
						<a class="btn btn-danger m-3" href="./" onclick="sweetAlertConfirmLink(event)">انصراف</a>
					</div>


				</div>
				<!-- /.box-body -->

				
			</form>
		</div>
	</div>
</div>

@section Scripts
{
	
	<script type="text/javascript">

		function ajaxSweetAlert(title, text, confirmButtonText, cancelButtonText, url) {
			if (errorTitle == null || errorTitle == "undefined") {
				errorTitle = "عملیات ناموفق";
			}
			if (errorText == null || errorText == "undefined") {
				errorText = "";
			}
			Swal.fire({
				title: title,
				text: text,
				icon: "warning",
				confirmButtonText: confirmButtonText,
				showCancelButton: true,
				cancelButtonText: cancelButtonText,
				preConfirm: () => {
					$.ajax({
						url: url,
						type: "get",
						beforeSend: function () {
							$(".loading").show();
						},
						complete: function () {
							$(".loading").hide();
						},
						error: function (data) {
							ErrorAlert("مشکلی در اعملیات رخ داده", "لطفا در زمان دیگری امتحان کنید");
						}
					}).done(function (result) {
						{
							if (result) {
								Success('عملیات موفق ','انجام شد!');
							} else {
								ErrorAlert("مشکلی در اعملیات رخ داده", "لطفا در زمان دیگری امتحان کنید");
							}

							setTimeout(function (parameters) {
									location.reload();
								},
								2000);
						}
					});


				}
			});
		}
	
		function changeBan(url, errorTitle, errorText) {
			if (errorTitle == null || errorTitle == "undefined") {
				errorTitle = "عملیات ناموفق";
			}
			if (errorText == null || errorText == "undefined") {
				errorText = "";
			}
			Swal.fire({
				title: "هشدار !!",
				text: "آیا از انجام عملیات اطمینان دارید ؟",
				icon: "warning",
				confirmButtonText: "بله",
				showCancelButton: true,
				cancelButtonText: "خیر",
				preConfirm: () => {
					$.ajax({
						url: url,
						type: "get",
						beforeSend: function () {
							$(".loading").show();
						},
						complete: function () {
							$(".loading").hide();
						},
						error: function (data) {
							ErrorAlert("مشکلی در اعملیات رخ داده", "لطفا در زمان دیگری امتحان کنید");
						}
					}).done(function (result) {
						{
							if (result.success) {
								Success(result.title, result.message);
							} else {
								ErrorAlert(result.title, result.message);
							}

							setTimeout(function (parameters) {
									location.reload();
								},
								2000);
						}
					});


				}
			});
		}
	  
		//event listener for input type file for preventing choosing any file except image file before user submit the form
		document.getElementById('file_input').addEventListener('change', function(event) {
			const file = event.target.files[0];
			if (validateImageFile(file)) {
				if (file && file.type.startsWith('image/')) {
					const reader = new FileReader();
					reader.onload = function(e) {
						const img = document.getElementById('img_preview');
						img.src = e.target.result;
						img.style.display = 'block';
					};
					reader.readAsDataURL(file);
				}
			}
			
		});

		function validateImageFile(file) {
			const allowedImageTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/bmp', 'image/webp'];
			if (file && allowedImageTypes.includes(file.type)) {
				return true;
			} else {
				ErrorAlert('تصویر نامعتبر!','لطفا تصویر معتبر که پسوند های jpeg,png,bmp,webp داشته باشد انتخاب کنید');
				$("#file_input").val('');
				return false;
			}
		}
	</script>
}
