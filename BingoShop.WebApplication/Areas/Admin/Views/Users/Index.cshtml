@using Shared.Application.Utility
@using Shared.Application.Services
@inject IAuthService _AuthService;
@model Users1.Application.Contract.UserService.Query.FilteredUsersQueryModel
@{
	ViewData["Title"] = "کاربران سایت";
	ViewData["Selected"] = "Users";
	
	var counter = 0;

	var loggedUserId = _AuthService.GetUserId();
}

@section HeaderContent{
	
	
	

}

<div class="row">
	<div class="col-xs-12">
		<div class="box">
			<div class="box-header">
				<div class="col-xs-3"></div>
				<div class="col-xs-6 ">
					<form class="form-inline ml-3  float-sm" asp-action="Index" method="get">
						<div class="input-group input-group-sm " style="display: flex; ">

							<input class="form-control " type="search" placeholder="نام کاربری یا موبایل را وارد کنید..." aria-label="Search" name="q" value="@Model.FilterParams.Title">
							<button class="btn btn-sm btn-success " style="margin-right: 6px" type="submit">
								<i class="fa fa-search">جستجو</i>
							</button>
							<div class="input-group-append ">

							</div>
						</div>

					</form>
				</div>
			</div>
			<!-- /.box-header -->
			<div class="box-body">
				
				
				<table class="table table-bordered table-striped">

					<thead class="">

						<tr>
							<th class="">#</th>
							<th class="col-2">نام کابری</th>
							<th class="col-2">موبایل</th>
							<th class="col-2">آواتار</th>
							<th class="col-1"> نقش ها</th>
							<th class="col-4">عملیات</th>
						</tr>

					</thead>
					<tbody>

						@if (Model.Users.Any())
						{
							@foreach (var user in Model.Users)
							{
								<tr>
									<td>@(counter += 1)</td>

									<td>
										@user.UserName
										@if (loggedUserId == user.userId)
										{
											<i class="text-success">(خودم هستم)</i>
										}
									</td>

									<td>
										@user.Mobile
									</td>
									<td class="mr-3 mt-3">
										<img class="user-image" src="@Directories.GetUserAvatarFullPath(@user.Avatar,100)" width="100" height="100" alt="user-avatar" />
									</td>

									<td>
										@foreach (var role in @user.Roles)
										{
											<ul>
												<li>
													@role.Title
													<a class="btn btn-sm btn-danger mr-1" title="حذف نقش از کاربر" onclick="deleteUserRole('@user.userId','@role.Id')"><i class="fa fa-trash"></i></a>
												</li>
											</ul>

											
										}

									</td>

									<td class="btn-group-sm">

										<a  title="ویرایش مشخصات" class="btn btn-warning mr-1" href="/Admin/Users/EditUser?userId=@user.userId">
											<i class="fa fa-edit"></i>
										</a>
										@if (loggedUserId == user.userId)
										{
											
										}
										else
										{
											@if (@user.IsActive)
											{
												<a class="btn btn-danger" onclick="changeActivation('/Admin/Users/ChangeUserActivation/@user.userId')"> غیر فعال کردن </a>
											}
											else
											{

												<a class="btn btn-primary " onclick="changeActivation('/Admin/Users/ChangeUserActivation/@user.userId')">  فعال کردن </a>
											}
										}


										<!-- Button trigger modal -->
										<a class="btn btn-primary" onclick="getAddRoleToUserModel('@user.userId')" data-toggle="modal" data-target="#exampleModal">
											<i class="fa fa-universal-access" aria-hidden="true"></i>
											تخصیص نقش 
										</a>


										<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
										</div>


									</td>
								</tr>


							}

							if (Model.TotalPages > 1)
							{
								<div class="row">
									<ul class="pagination pagination-sm " style="margin-right: 500px">
										@if (Model.CurrentPage > 1)
										{
											<li class="page-item"><a disabled class="page-link" asp-area="Admin" asp-controller="Home" asp-action="Index" asp-route-pageId="@(Model.CurrentPage-1)" asp-route-q="@Model.FilterParams.Title">&laquo;</a></li>
										}
										@for (var i = Model.StartPage; i <= Model.EndPage; i++)
										{
											<li class="page-item"><a href="/Admin/Home/Users?pageId=@i&q=@Model.FilterParams.Title" class="page-link" @((i == Model.CurrentPage ? "class='disabled-link'" : ""))>@i</a></li>
										}
										@if (Model.CurrentPage < Model.EndPage)
										{
											<li class="page-item"><a class="page-link" href="/Admin/Home/Users?pageId=@Model.CurrentPage+1&q=@Model.FilterParams.Title">&raquo;</a></li>
										}

									</ul>
								</div>

							}
						}
						else
						{
							<h1>چیزی برای نمایش وجود ندارد...</h1>
						}

					</tbody>
				</table>
				

			</div>
		</div>
	</div>
</div>


						@section Scripts
						{
							<script>
								function changeActivation(url, errorTitle, errorText) {
									if (errorTitle == null || errorTitle == "undefined") {
										errorTitle = "عملیات ناموفق";
									}
									if (errorText == null || errorText == "undefined") {
										errorText = "";
									}
									Swal.fire({
										title: "هشدار !!",
										text: "آیا از انجام عملیات اطمینان دارید ؟",
										icon: "warning",
										confirmButtonText: "بله",
										showCancelButton: true,
										cancelButtonText: "خیر",
										preConfirm: () => {
											$.ajax({
												url: url,
												type: "get",
												beforeSend: function() {
													$(".loading").show();
												},
												complete: function() {
													$(".loading").hide();
												},
												error: function(data) {
													ErrorAlert("مشکلی در اعملیات رخ داده", "لطفا در زمان دیگری امتحان کنید");
												}
											}).done(function(result) {
												{

													if (result.success) {
														Success(result.title, result.message);
													} else {
														ErrorAlert(result.title, result.message);
													}

													setTimeout(function(parameters) {
															location.reload();
														},
														2000);
												}
											});


										}
									});
								}

								function deleteUserRole(userId, roleId) {

									Swal.fire({
										title: "هشدار !!",
										text: "آیا از انجام عملیات اطمینان دارید ؟",
										icon: "warning",
										confirmButtonText: "بله",
										showCancelButton: true,
										cancelButtonText: "خیر",
										preConfirm: () => {
											$.ajax({
												url: `/Admin/Roles/DeleteUserRole?userId=${userId}&roleId=${roleId}`,
												type: "get",
												beforeSend: function() {
													$(".loading").show();
												},
												complete: function() {
													$(".loading").hide();
												},
												error: function(data) {
													ErrorAlert("مشکلی در اعملیات رخ داده", "لطفا در زمان دیگری امتحان کنید");
												}
											}).done(function(result) {
												{
													if (result.success) {
														Success(result.title, result.message);
													} else {
														ErrorAlert(result.title, result.message);
													}

													setTimeout(function(parameters) {
															location.reload();
														},
														2000);
												}
											});


										}
									});
								}


								function getAddRoleToUserModel(userId) {


									$.ajax({
										url: `/Admin/Roles/GetRolesForAddRoleToUser?userId=${userId}`,
										type: "get",
										error: function(data) {
											ErrorAlert("مشکلی در اعملیات رخ داده", "لطفا در زمان دیگری امتحان کنید");
										}

									}).done(function(data) {
										$("#exampleModal").html('');
										$("#exampleModal").append(data);

									});
								}
							</script>



						}
